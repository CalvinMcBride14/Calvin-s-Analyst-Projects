/* Created Banking_Database and Table for CC_Customers (Credit Card Customers) here. Uploaded the data fields using MySQL Data Import Wizard. */

Create Database if not exists Banking_Database;

USE banking_database;

Create table if not exists `CC_Customers` (
`Client_Num` VARCHAR(50), 
`Attiriton_Flag` VARCHAR(120) NOT NULL,
`Customer_Age` INT, 
`Gender` ENUM('M','F'),
`Dependent_Count` INT,
`Education_Level` VARCHAR(50) NOT NULL,
`Maritial_Staus` VARCHAR(120) NOT NULL,
`Income_Category` VARCHAR(50) NOT NULL,
`Card_Category` VARCHAR (50) NOT NULL,
`Months_on_book` INT,
`Total_Relationship_Count` INT,
`Months_Inactive_12 Mon` INT, 
`Contacts_Count_12_mon` INT,
`Credit_Limit` INT,
`Total_Revolving_Bal` INT,
`Avg_Open_To_Buy` INT,
`Total_Amt_Chng_Q4_Q1` INT,
`Total_Trans_Amt` INT,
`Total_Trans_Ct` INT,
`Total_Ct_Chng_Q4_Q1` INT,
`Avg_Utilization_Ratio`INT,
`Naive_Bayes_1` INT,
`Naive_Bayes_2` INT
) ;

SELECT * FROM banking_database.CC_customers;




/* Started Data Exploration */ 



/* Find the Distibution of customers who were lost(attrited) by age */

SELECT 
CASE WHEN customer_age < 20 then '0-20' when customer_age between 20 and 30 then '20-30'
when customer_age between 30 and 40 then '30-40' when customer_age between 40 and 50 then '40-50'
when customer_age between 50 and 60 then '50-60' when customer_age between 60 and 70 then '60-70'
when customer_age between 70 and 80 then '70-80' when customer_age > 80 then 'Above 80' END as Age_Range, Count(*)
FROM 
banking_database.cc_customers
WHERE	
attrition_flag = 'attrited customer' 
group by age_range 
order by age_range;



/* Find the number(count) of both "attrited and exitising" customers who used a dependent */

SELECT dependent_count, count(*) as total_existing
FROM 
banking_database.cc_customers
WHERE 
attrition_flag = 'existing customer'
GROUP BY dependent_count
ORDER BY dependent_count
;

SELECT dependent_count, count(*) as total_attrited
FROM 
banking_database.cc_customers
WHERE 
attrition_flag = 'attrited customer'
GROUP BY dependent_count
ORDER BY dependent_count
;



/* Find the Education Level count for both "attrited" and "exitising" customers */

SELECT education_level, count(*) as existing_customer_count
FROM 
banking_database.cc_customers
WHERE 
attrition_flag = 'existing customer'
GROUP BY education_level
ORDER BY education_level
;

SELECT education_level, count(*) as attrited_customer_count
FROM 
banking_database.cc_customers
WHERE 
attrition_flag = 'attrited customer'
GROUP BY education_level
ORDER BY education_level
;



/* Find the count for each Card Categoties used by both "existing" and "attrited" customers. */

SELECT card_category, count(*) as attrited_cardcat_count
FROM 
banking_database.cc_customers
WHERE 
attrition_flag = 'attrited customer'
GROUP BY card_category
ORDER BY card_category
;

SELECT card_category, count(*) as existing_cardcat_count
FROM 
banking_database.cc_customers
WHERE 
attrition_flag = 'existing customer'
GROUP BY card_category
ORDER BY card_category
;



/* Find the number of male and female "exisiting" and "attrited" customers */

SELECT 
    SUM(IF(gender = 'M', 1, 'null')) AS male_exisiting_customer,
    SUM(IF(gender = 'F', 1, 'null')) AS female_existing_customer
FROM 
banking_database.cc_customers
WHERE attrition_flag = 'existing customer'
;

SELECT 
    SUM(IF(gender = 'M', 1, 'null')) AS male_attrited_customer,
    SUM(IF(gender = 'F', 1, 'null')) AS female_attrited_customer
FROM 
banking_database.cc_customers
WHERE attrition_flag = 'attrited customer'
;



/* Find the month on book (number of months that have completed since the loan origination date) range for both "existing" and "attrited" customers. */

SELECT case when months_on_book < 20 then '0-20' when months_on_book between 20 and 30 then '20-30'
when months_on_book between 30 and 40 then '30-40' when months_on_book between 40 and 50 then '40-50'
when months_on_book between 50 and 60 then '50-60' when months_on_book > 60 then 'Above 60' end as months_on_book_range, count(*) as existing_customer_count
FROM
banking_database.cc_customers
WHERE
attrition_flag = 'existing customer'
GROUP BY months_on_book_range
ORDER BY months_on_book_range
;

SELECT case when months_on_book < 20 then '0-20' when months_on_book between 20 and 30 then '20-30'
when months_on_book between 30 and 40 then '30-40' when months_on_book between 40 and 50 then '40-50'
when months_on_book between 50 and 60 then '50-60' when months_on_book > 60 then 'Above 60' end as months_on_book_range, count(*) as attrited_customer_count
FROM
banking_database.cc_customers
WHERE
attrition_flag = 'attrited customer'
GROUP BY months_on_book_range
ORDER BY months_on_book_range
;

